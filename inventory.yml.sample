---
all:
  vars:
    # Installs the ComputeStacks Support SSH Key, and adds our support ip to the firewall.
    install_cs_support_key: true
    
    region_name: dev # The region name. Should be lower case, without spaces, and only '-' and '_' characters
    availability_zone_name: "{{ region_name }}-a"
    
    overwrite_resolvconf: false # if the provider does not have internal resolvers, change to `true`.
    ansible_python_interpreter: /usr/bin/python3

    backups_key: "changme!" # Example: `openssl rand -base64 32`

    # Set to false for LetsEncrypt
    use_zerossl: true
    
    ##
    # Bug Reporting
    #
    # 1) Uncomment and leave blank to disable bug reporting completely.
    # 2) Leave commented out to report bugs to ComputeStacks. 
    # 3) Uncomment and set to your own Sentry DSN.
    # sentry_dsn: ""

    ##
    # Cloud Platform Specifics
    # Define what cloud platform you're running on.
    #
    # Please leave commented out unless you're running on digital ocean.
    #
    # cloud_platform: "digitalocean"
    # platform_do_token: "" # DigitalOcean Personal Access token to enable Floating IP Migration

    ##
    # Container Network

    # We recommend not going larger than a `/21`. If you need more, you can create additional networks later.
    calico_network: 10.100.0.0/21

    # some unique identifier. should not include spaces, capitals, or special characters.
    calico_network_name: "net100"

    # required when private network performs source/dest filtering
    calico_network_ipip: false

    ##
    # Floating IP

    # Configures corosync & pacemaker for automated failover.
    enable_floating_ip: false

    # Even if enable_floating_ip is false, set this to the public IP of your availability zone.
    # for single-node environments, this can be just the public ip of the node.
    floating_ip: 0.0.0.0
    floating_ip_netmask: 32

    # it's important that all nodes have same interface name.
    # if you mix eth/ens format, automatic failover will not work.
    # If, however, floating IP is in the same network as the primary ip
    # on that interface, you may leave the interface field blank and it should
    # correctly pick the correct interface.
    #
    # floating_ip_interface: ""

    ##
    # CS Controller Settings
    
    cs_app_url: a.dev.cmptstks.net
    cs_app_zone: cmptstks.net # The zone file for the app url
    cs_currency: "USD" # Default currency. Can add more later in web admin.
    cs_portal_domain: portal.dev.cmptstks.net
    cs_registry_domain: cr.dev.cmptstks.net
    cs_metrics_domain: metrics.dev.cmptstks.net

    ##
    # Create Admin Account
    cs_admin_email: "root@localhost"
    cs_admin_password: changeme

    ##
    # Management SSL Certificates
    # Controller, Registry, and Metrics will all receive ZeroSSL certificates during installation. By default, this will be done through HTTP validation.
    #
    # acme_challenge_method: 'http'
    #
    # To use DNS validation, see `ACME_VALIDATIONS.md`. 
    
    ##
    # Additional Management Ips
    # Add any additional IP Addresses that you want to have full access
    # to these servers. You can enter either single address, or ranges like: 192.168.10.0/24.
    #
    # Example:
    # extra_allowed_ipv4_addresses:
    #   - "192.168.10.32"
    #   - "192.168.10.33"
    # extra_allowed_ipv6_addresses:
    #   - "2600:3c01::f03c:92ff:feaa:fc7e"
  children:
    backup_server:
      hosts:
        192.168.173.11:
          node_ip: 192.168.173.11 # backup ip used by nodes
          controller_ip: 192.168.173.11 # backup ip used by controller
          metrics_ip_address: 192.168.173.11 # The ip used by prom to connect for stats.
          ssh_port: 22
          enable_ipv6: true
    controller:
      hosts:
        192.168.173.9:
          postgres_cs_password: "" # pwgen -s 32 1
          node_ip: 192.168.173.9 # The ip used to connect to nodes. (used by docker_iptables)
          metrics_ip_address: 192.168.173.9 # The ip used by prom to connect for stats.
          enable_ipv6: true
          ssh_port: 22
          ##
          # Example with pre-existing powerdns cluster
          # pdns_skip_provisioning: true
          # pdns_endpoint: "http://ns1.example.com:8081/api/v1/servers"
          # pdns_api_key: "" # PowerDNS API Key
          # pdns_web_key: "" # WebServer Password
          # pdns_nslist:
          #   - "ns1.example.com"
          #   - "ns2.example.com"
          # pdns_zone_type: Native
          # pdns_masters: [] # Leave empty for Native replication
    metrics:
      hosts:
        192.168.173.9:
          loki_password: "" # pwgen -s 32 1
          prometheus_password: "" # pwgen -s 32 1
          controller_endpoint: 127.0.0.1 # The ip/hostname used by the controller to connect
          node_endpoint: 192.168.173.9 # The ip/hostname used by nodes to connect
          enable_ipv6: true
          ssh_port: 22
    nodes:
      hosts:
        192.168.173.10:
          backup_ip: 192.168.173.10 # node ip used by backup server
          consul_bootstrap: true # set false on all other nodes.
          consul_listen_ip: 192.168.173.10 # used by both controller and agent.
          metrics_ip_address: 192.168.173.10 # The ip used by prom to connect for stats.
          etcd_listen_ip: 192.168.173.10 # shared with corosync
          etcd_initial_cluster_state: new # set to 'existing' if adding nodes to an existing availability zone
          ssh_port: 22

          # Currently not supported on container nodes. Contact us for info on how to bring ipv6 to your cluster.
          enable_ipv6: false
    registry:
      hosts:
        192.168.173.9:
          controller_ip: 127.0.0.1 # IP Addresses used by controller to connect to registry
          enable_ipv6: true
          ssh_port: 22
    primary_nameserver:
      hosts:
        192.168.173.20: # Comment out this if you have an existing cluster
          pdns_name: "ns1.example.com"  
          enable_ipv6: true
          ssh_port: 22

          # The ip used for internal postgres replication. 
          # This may often times be separate than the primary public ip
          postgres_ip: 192.168.173.20
    follower_nameservers:
        hosts: # Note that we only support 1 follower!
          192.168.173.21: # Comment out this if you have an existing cluster
            pdns_name: "ns2.example.com"
            enable_ipv6: true
            ssh_port: 22      
            postgres_ip: 192.168.173.21
