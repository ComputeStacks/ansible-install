---
selinux: true
license_key: ""

secret_key: ""
secret_auth_key: ""

region_name: "dev"
availability_zone_name: "{{ region_name }}-a"

lb_name: "{{ availability_zone_name }}-lb"

controller_use_lets_encrypt: true
ssh_port: 22
enable_ipv6: true

controller_haproxy_http_listen: "{% if enable_ipv6 %}:::80 v4v6{% else %}:80{% endif %}"
controller_haproxy_https_listen: "{% if enable_ipv6 %}:::443 v4v6{% else %}:443{% endif %}"

##
# Controller Image
docker_registry: ghcr.io
controller_version: "6.4"
controller_image: computestacks/controller
controller_image_path: "{{ docker_registry }}/{{ controller_image }}:{{ controller_version }}"

##
# Directory Structure & Paths
config_directory: "/etc/computestacks"
certificates_directory: "{{ config_directory }}/certificates"

cs_environmental_file: "/etc/default/computestacks"

data_directory: "/var/lib/computestacks"
backups_directory: "{{ data_directory }}/backups"
ssh_keys_directory: "{{ data_directory }}/sshkeys"
rake_tasks_directory: "{{ data_directory }}/rake"
branding_directory: "{{ data_directory }}/branding"

##
# App Configuration
cs_version: "{{ controller_version }}"
cs_app_id: "dev"
cs_locale: "en"
cs_currency: "USD"

# Default User
cs_admin_create: false # CS Support user is already created by default
cs_admin_email: root@localhost
cs_admin_password: changeme

# Domains
cs_app_url: "" # WildCard self-signed cert generation
cs_app_zone: "" # The zone name for cs_app_url.
cs_portal_domain: ""
cs_registry_domain: ""
cs_metrics_domain: "" # We create a domain so we can grab a LetsEncrypt cert for our metrics endpoint

# SSL
acme_staging: false

# Networks
floating_ip: "10.10.100.10"
calico_network_name: "dev01"
calico_network: 10.100.0.0/21
calico_network_ipip: false

# Prometheus
prometheus_username: "promuser"
prometheus_password: "{{ hostvars[groups['metrics'][0]].prometheus_password }}"
prometheus_endpoint: "https://{{ cs_metrics_domain }}:3101"

# Loki
loki_username: "loguser"
loki_password: "{{ hostvars[groups['metrics'][0]].loki_password }}"
loki_controller_endpoint: "https://{{ cs_metrics_domain }}:3102"
loki_node_endpoint: "https://{{ cs_metrics_domain }}:3102"

# Concurrency
queue_le: 2
queue_system: 15
queue_deployment: 20

passenger_pool_size: 15
passenger_min_instances: 15

##
# Branding
branding_css_url: "https://storage.googleapis.com/cstacks/provision_assets/branding/application.css"
branding_css_map_url: "https://storage.googleapis.com/cstacks/provision_assets/branding/application.css.map"
branding_login_img_url: "https://storage.googleapis.com/cstacks/provision_assets/branding/logo-login.png"

##
# Postgres
postgres_user: computestacks
postgres_cs_password: "ch4ng3m3"
postgres_host: 127.0.0.1
postgres_pool: 30

##
# Redis
redis_host: 127.0.0.1

##
# ComputeStacks Bastion Portal
enable_support_ip: true
support_ip: 192.155.86.87

##
# Container Registry
registry_data_path: "/computestacks-mnt"
registry_server_ip: "{% if 'registry' in groups %}{{ hostvars[groups['registry'][0]].controller_ip }}{% else %}127.0.0.1{% endif %}"
registry_ssh_port: "{{ hostvars[groups['registry'][0]].ssh_port }}"
