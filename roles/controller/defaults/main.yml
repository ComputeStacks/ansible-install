---
##
# Bug Reporting
#
# 1) Comment out and set to blank will disable bug reporting completely.
# 2) Leave as below to enable bug reporting to ComputeStacks.
# 3) Set to your own Sentry DSN to report bugs to your own installation of Sentry.
sentry_dsn: "https://dfcc28e876f549d887c1ff443775e107@sentry.cmptstks.com/2"

secret_key: ""
secret_auth_key: ""

consul_token: ""

region_name: "dev"
availability_zone_name: "{{ region_name }}-a"

lb_name: "{{ availability_zone_name }}-lb"

controller_use_lets_encrypt: true
ssh_port: 22

controller_haproxy_http_listen: ":::80 v4v6"
controller_haproxy_https_listen: ":::443 v4v6"

##
# Controller Image
controller_image_path: "ghcr.io/computestacks/controller:9"

##
# Directory Structure & Paths
config_directory: "/etc/computestacks"
certificates_directory: "{{ config_directory }}/certificates"

cs_environmental_file: "/etc/default/computestacks"

data_directory: "/var/lib/computestacks"
backups_directory: "{{ data_directory }}/backups"
ssh_keys_directory: "{{ data_directory }}/sshkeys"
rake_tasks_directory: "{{ data_directory }}/rake"
branding_directory: "{{ data_directory }}/branding"

##
# Helps ComputeStacks support link bugs to your installation.
# Note: Does not apply if you disable bug reporting
#
# 1) Leave as 'default' -- will generate a unique identifier for your installation
# 2) Set your own name -- should be a single word, lowercase, without any numbers or special characters.
#    For example, if your company is called Acme, Inc., I would recommend 'acme'.
cs_app_id: "default"

##
# App Configuration
cs_locale: "en"
cs_currency: "USD"

# Default User
cs_admin_email: root@localhost
cs_admin_password: changeme

# Domains
cs_app_url: "" # WildCard self-signed cert generation
cs_app_zone: "" # The zone name for cs_app_url.
cs_portal_domain: ""
cs_registry_domain: ""
cs_metrics_domain: "" # We create a domain so we can grab a LetsEncrypt cert for our metrics endpoint

# SSL
acme_staging: false

# Networks
container_network_name: "dev01"
container_network: 10.100.0.0/21

# Prometheus
prometheus_username: "promuser"
prometheus_password: "{{ hostvars[groups['metrics'][0]].prometheus_password }}"
prometheus_endpoint: "https://{{ cs_metrics_domain }}:3101"

# Loki
loki_username: "loguser"
loki_password: "{{ hostvars[groups['metrics'][0]].loki_password }}"
loki_controller_endpoint: "https://{{ cs_metrics_domain }}:3102"
loki_node_endpoint: "https://{{ cs_metrics_domain }}:3102"

# Concurrency
queue_le: 2
queue_system: 15
queue_deployment: 20

rails_max_threads: 15
rails_min_threads: 15

##
# Branding
branding_css_url: "https://f.cscdn.cc/file/cstackscdn/cloud-portal/branding/application.css"
branding_css_map_url: "https://f.cscdn.cc/file/cstackscdn/cloud-portal/branding/application.css.map"
branding_login_img_url: "https://f.cscdn.cc/file/cstackscdn/cloud-portal/branding/logo-login.png"

##
# Postgres
postgres_user: computestacks
postgres_cs_password: "ch4ng3m3"
postgres_host: 127.0.0.1
postgres_pool: 30

##
# Redis
redis_host: 127.0.0.1

##
# Container Registry
registry_data_path: "/computestacks-mnt"
registry_server_ip: "{% if 'registry' in groups %}{{ hostvars[groups['registry'][0]].controller_ip }}{% else %}127.0.0.1{% endif %}"
registry_ssh_port: "{{ hostvars[groups['registry'][0]].ssh_port }}"

##
# DNS

dns_allowed_drivers:
  - autodns
  - powerdns

dns_driver: powerdns

dns_valid_driver: "{{ dns_driver in dns_allowed_drivers }}"

# AutoDNS
autodns_endpoint: "gateway.autodns.com" # https://{{ endpoint }} <-- should not be changed.
autodns_username: ""
autodns_password: ""
autodns_context: "4"
autodns_nameservers:
  - a.ns14.net
  - b.ns14.net
  - c.ns14.net
  - d.ns14.net
autodns_master_ns: a.ns14.net
autodns_ns_ttl: 86400
autodns_soa_email: 'dns@example.org'
autodns_soa_level: 2

# PowerDNS
pdns_credentials_dir: "/root/.credentials"
pdns_credentials_api_file: "{{ pdns_credentials_dir }}/.powerdns.api.secret"
pdns_credentials_web_file: "{{ pdns_credentials_dir }}/.powerdns.web.secret"
pdns_credentials_db_file: "{{ pdns_credentials_dir }}/.powerdns.db.secret"

pdns_zone_type: Native # or Master

pdns_endpoint: "{% if dns_driver == 'powerdns' %}http://{{ hostvars[groups['primary_nameserver'][0]].pdns_name }}:8081/api/v1/servers{% endif %}"

# Manual Provisioning
pdns_skip_provisioning: false
pdns_api_key: "" # PowerDNS API Key
pdns_web_key: "" # WebServer Password
pdns_nslist: []
#  - "ns1.example.com"
#  - "ns2.example.com"
pdns_masters: [] # Leave empty for Native replication
#  - "ns1.example.com" # In most situations this will be the first, primary, nameserver.


##
# CS DNS
cs_dns_module_endpoint: "{% if dns_driver == 'powerdns' %}{{ pdns_endpoint }}{% elif dns_driver == 'autodns' %}https://{{ autodns_endpoint }}{% endif %}"
cs_dns_module_name: "{% if dns_driver == 'powerdns' %}Pdns{% elif dns_driver == 'autodns' %}AutoDNS{% endif %}"
cs_dns_module_user: "{% if dns_driver == 'powerdns' %}admin{% elif dns_driver == 'autodns' %}{{ autodns_username }}{% endif %}"
cs_dns_module_api: "{% if dns_driver == 'powerdns' %}{{ pdns_web_key }}{% elif dns_driver == 'autodns' %}{{ autodns_context }}{% endif %}"
cs_dns_module_secret: "{% if dns_driver == 'powerdns' %}{{ pdns_api_key }}{% elif dns_driver == 'autodns' %}{{ autodns_password }}{% endif %}"


enable_cloudflare_real_ip: true
