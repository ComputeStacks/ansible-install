---
global:
  scrape_interval:     10s
  evaluation_interval: 10s

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - 'alertmanager:9093'

rule_files:
  - "alerts_prom.yml"
  - "alerts_node.yml"
  - "alerts_containers.yml"

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'cadvisor'
    static_configs:
      - targets: ['{{ hostvars[groups['controller'][0]].metrics_ip_address }}:{{ cadvisor_port }}']
        labels:
          region: {{ hostvars[groups['controller'][0]].global_region_name }}
          node: {{ hostvars[groups['controller'][0]].ansible_hostname }}
      {% if groups['metrics'][0] != groups['controller'][0] %}

      - targets: ['{{ hostvars[groups['metrics'][0]].ansible_default_ipv4.address }}:{{ cadvisor_port }}']
        labels:
          region: {{ hostvars[groups['metrics'][0]].global_region_name }}
          node: {{ hostvars[groups['metrics'][0]].ansible_hostname }}
      {% endif %}
      {% for server in groups['nodes'] %}

      - targets: ['{{ hostvars[server].metrics_ip_address }}:{{ cadvisor_port }}']
        labels:
          region: {{ hostvars[server].global_region_name }}
          node: {{ hostvars[server].ansible_hostname }}
      {% endfor %}

  - job_name: 'node-exporter'
    static_configs:
      - targets: ['{{ hostvars[groups['controller'][0]].metrics_ip_address }}:{{ node_exporter_port }}']
        labels:
          region: {{ hostvars[groups['controller'][0]].global_region_name }}
          node: {{ hostvars[groups['controller'][0]].ansible_hostname }}
      {% if groups['metrics'][0] != groups['controller'][0] %}

      - targets: ['{{ hostvars[groups['metrics'][0]].ansible_default_ipv4.address }}:{{ node_exporter_port }}']
        labels:
          region: {{ hostvars[groups['metrics'][0]].global_region_name }}
          node: {{ hostvars[groups['metrics'][0]].ansible_hostname }}
      {% endif %}
      {% for server in groups['nodes'] %}

      - targets: ['{{ hostvars[server].metrics_ip_address }}:{{ node_exporter_port }}']
        labels:
          region: {{ hostvars[server].global_region_name }}
          node: {{ hostvars[server].ansible_hostname }}
      {% endfor %}
      {% for server in groups['backup_server'] %}

      - targets: ['{{ hostvars[server].metrics_ip_address }}:{{ node_exporter_port }}']
        labels:
          region: {{ hostvars[server].global_region_name }}
          node: {{ hostvars[server].ansible_hostname }}
      {% endfor %}

  - job_name: 'haproxy'
    static_configs:
      - targets: ['{{ hostvars[groups['controller'][0]].metrics_ip_address }}:{{ haproxy_stats_port }}']
        labels:
          region: {{ hostvars[groups['controller'][0]].global_region_name }}
          node: {{ hostvars[groups['controller'][0]].ansible_hostname }}
      {% if groups['metrics'][0] != groups['controller'][0] %}

      - targets: ['{{ hostvars[groups['metrics'][0]].ansible_default_ipv4.address }}:{{ haproxy_stats_port }}']
        labels:
          region: {{ hostvars[groups['metrics'][0]].global_region_name }}
          node: {{ hostvars[groups['metrics'][0]].ansible_hostname }}
      {% endif %}
      {% for server in groups['nodes'] %}

      - targets: ['{{ hostvars[server].metrics_ip_address }}:{{ haproxy_stats_port }}']
        labels:
          region: {{ hostvars[server].global_region_name }}
          node: {{ hostvars[server].ansible_hostname }}
      {% endfor %}
