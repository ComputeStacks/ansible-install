---
- include_tasks: centos/packages.yml
  when: ansible_distribution == 'CentOS'

- include_tasks: debian/packages.yml
  when: ansible_distribution == 'Debian'

# Ignore errors, because it may already exist which produces an error we don't care about.
- name: create initial database
  shell: "{{ psql_initdb_cmd }}"
  ignore_errors: yes
  no_log: True
  vars:
    ansible_ssh_pipelining: no

- name: install pg_hba
  copy:
    src: pg_hba.conf
    dest: "{{ psql_data_path }}/pg_hba.conf"

- name: adjust pg listen ip
  lineinfile:
    path: "{{ psql_data_path }}/postgresql.conf"
    regexp: '^listen_addresses '
    insertafter: '^#listen_addresses '
    line: "listen_addresses = '127.0.0.1'"

- name: start
  systemd:
    name: "{{ psql_service_name }}"
    state: restarted
    enabled: yes

- name: Create PG root DB
  postgresql_db:
    name: root
    encoding: UTF-8
    state: present
  become_user: postgres
  become: yes
  become_method: su

- name: Create PG CS DB
  postgresql_db:
    name: "{{ postgres_user }}"
    encoding: UTF-8
    state: present
  become_user: postgres
  become: yes
  become_method: su

- name: Create PostgreSQL Users
  postgresql_user:
    name: root
    db: root
    role_attr_flags: SUPERUSER
    state: present
  become_user: postgres
  become: yes
  become_method: su

- name: Create ComputeStacks user
  postgresql_user:
    name: "{{ postgres_user }}"
    db: "{{ postgres_user }}"
    password: "{{ postgres_cs_password }}"
    role_attr_flags: SUPERUSER
    state: present
  become_user: postgres
  become: yes
  become_method: su

- name: Set ComputeStacks DB owner
  postgresql_db:
    name: "{{ postgres_user }}"
    owner: "{{ postgres_user }}"
  become_user: postgres
  become: yes
  become_method: su

- name: Create PG CloudPortal DB
  postgresql_db:
    name: cloudportal
    owner: "{{ postgres_user }}"
    encoding: UTF-8
  become_user: postgres
  become: yes
  become_method: su
