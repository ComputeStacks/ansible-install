---
- name: Download Calico
  get_url:
    url: "{{ calico_src }}"
    dest: "{{ calico_exec }}"
    mode: 0755

- name: Download Calico IPAM
  get_url:
    url: "{{ calico_ipam_src }}"
    dest: "{{ calico_ipam_exec }}"
    mode: 0755

- name: Create calico directory
  file:
    path: "{{ calico_conf_dir }}"
    state: directory

- name: Generate calico-ipam environment
  template:
    src: calico-env.sh.j2
    dest: "{{ calico_ipam_conf }}"

- name: Generate calicoctl config file
  template:
    src: calicoctl.cfg.j2
    dest: "{{ calico_cli_conf }}"

- name: Apply calico-ipam startup
  template:
    src: calico-ipam.service.j2
    dest: /etc/systemd/system/calico-ipam.service

- name: reload systemd
  systemd: daemon_reload=yes

- name: Start calico-ipam
  service:
    name: calico-ipam
    enabled: yes
    state: started

- name: Ensure docker is running
  service:
    name: docker
    state: started

- name: Write Calico install script
  template:
    src: run_calico.sh.j2
    dest: /usr/local/bin/run_calico
    mode: 0755

- name: Install calico
  shell: /bin/bash /usr/local/bin/run_calico

- name: Write calico egress policy
  copy:
    src: calico_global_egress.yml
    dest: /root/calico_global_egress.yml
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true

- name: Apply calico egress policy
  shell: "{{ calico_exec }} apply -f /root/calico_global_egress.yml"
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true
  vars:
    ansible_ssh_pipelining: no

- name: Write calico network policy
  template:
    src: calico_network.yml.j2
    dest: /root/calico_network.yml
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true

- name: Apply calico network policy
  shell: "{{ calico_exec }} apply -f /root/calico_network.yml"
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true
  vars:
    ansible_ssh_pipelining: no

- name: Create docker network
  shell: docker network create --driver calico --ipam-driver calico-ipam --subnet={{ calico_network }} {{ calico_network_name }}
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true
  vars:
    ansible_ssh_pipelining: no

##
# https://docs.projectcalico.org/maintenance/troubleshoot/troubleshooting#configure-networkmanager
- name: Ensure Network Manager directory exists
  file:
    path: /etc/NetworkManager/conf.d
    state: directory

- name: Install calico network manager config
  copy:
    src: network_manager.conf
    dest: /etc/NetworkManager/conf.d/calico.conf
