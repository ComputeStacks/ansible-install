---
- name: install packages
  package:
    name:
      - pacemaker
      - haveged
      - pcs
      - corosync
    state: present

- name: ensure directories exists
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ corosync_config_dir }}"
    - "{{ corosync_log_dir }}"

- name: load corosync config
  template:
    src: corosync.conf.j2
    dest: "{{ corosync_config_file }}"
    mode: 0644

- name: generate key
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true
  command: corosync-keygen -l

- name: read key
  slurp:
    src: "{{ corosync_key_file }}"
  register: corosync_authkey
  run_once: true
  delegate_to: "{{ groups['nodes'][0] }}"

- name: store key
  set_fact:
    corosync_key: "{{ corosync_authkey.content|b64decode }}"

- name: write key
  copy:
    dest: "{{ corosync_key_file }}"
    content: "{{ corosync_key }}"
  when: inventory_hostname != groups['nodes'][0]

- name: run corosync
  systemd:
    name: corosync
    enabled: yes
    state: restarted

- name: run pacemaker
  systemd:
    name: pacemaker
    enabled: yes
    state: restarted

- name: set stonith
  command: pcs property set stonith-enabled=false
  run_once: true
  
- name: set no-quorum-policy
  shell: pcs property set no-quorum-policy=ignore
  run_once: true
  vars:
    ansible_ssh_pipelining: no

- include_tasks: platforms/generic.yml
  when: "cloud_platform == 'generic'"

- include_tasks: platforms/digitalocean.yml
  when: "cloud_platform == 'digitalocean'"
