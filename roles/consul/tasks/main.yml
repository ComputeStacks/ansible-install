---
- name: check if ssl configured
  stat:
    path: "{{ consul_ssl_key }}"
  register: consul_certs_exists

- include_tasks: install_ssl.yml
  when: consul_certs_exists.stat.exists == False

- name: check if exists
  community.general.docker_container_info:
    name: consul
  register: consul_container

- name: pull image
  community.general.docker_image:
    name: "{{ consul_image }}"
    tag: "{{ consul_image_tag }}"
    source: pull

- name: install
  import_tasks: install.yml
  when: not consul_container.exists

# This allows consul to be updated even if already provisioned.
- name: restart
  systemd:
    name: consul
    state: restarted
  when: consul_container.exists

- name: Wait for consul to boot
  command: "docker exec consul consul version"
  register: is_consul_online
  retries: 3
  delay: 3
  failed_when: is_consul_online.rc > 0

- name: check if token exists
  stat:
    path: "/root/.consul.secret"
  register: consul_token_file
  delegate_to: "{{ groups['nodes'][0] }}"

- name: generate token
  import_tasks: install_acl.yml  
  delegate_to: "{{ groups['nodes'][0] }}"
  run_once: true
  when: consul_token_file.stat.exists == False

- block:
    - name: restrict acl policy
      replace:
        path: /etc/consul/config.json
        regexp: 'allow'
        replace: 'deny'
    - name: restart
      systemd:
        name: consul
        state: restarted
  when: consul_token_file.stat.exists == False
