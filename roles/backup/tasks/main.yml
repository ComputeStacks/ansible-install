---
- name: backup_server | setup nfsshare
  file:
    path: "{{ backup_path }}"
    state: directory
    mode: '0755'
    owner: nfsnobody
    group: nfsnobody

- name: backup_server | write exports
  template:
    src: exports.j2
    dest: /etc/exports

- name: backup_server | restart services
  service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
  loop:
    - rpcbind
    - nfs-server
    - nfs-lock
    - nfs-idmap

- name: backup_server | check if iptables already exists
  stat:
    path: "{{ iptables_script }}"
  register: check_iptables

- name: backup_server | install iptables config file
  template:
    src: iptables.config.j2
    dest: "{{ iptables_script }}"
    mode: 0755
  when: check_iptables.stat.exists == False

- name: backup | fetch node ssh keys
  fetch:
    src: "/root/.ssh/id_ed25519.pub"
    dest: "tmp/nodes/{{ item }}.pub"
    flat: yes
  delegate_to: "{{ item }}"
  with_items: "{{ groups.nodes }}"
  register: node_ssh_keys
  changed_when: false
  
- name: backup | add ssh keys to backup server
  ansible.posix.authorized_key:
    user: "root"
    key: "{{ lookup('file', item) }}"
    state: present
  with_flattened: 
    - "{{ node_ssh_keys.results | default({}) | map(attribute='dest') | list }}"

- name: backup | remove temp local pubkey copies
  local_action: file dest="tmp/nodes" state=absent
  changed_when: false