---
- name: disable systemd-resolved
  systemd:
    name: systemd-resolved
    state: stopped
    enabled: false
  when: ansible_facts.services['systemd-resolved.service'] is defined

- block:
    - name: install key
      ansible.builtin.get_url:
        url: "{{ pdns_repo_key }}"
        dest: "{{ pdns_repo_key_path }}"
    - name: add repo
      ansible.builtin.apt_repository:
        repo: "deb [signed-by={{ pdns_repo_key_path }} arch=amd64] {{ pdns_repo }}"
        state: present

- name: pin package
  copy:
    src: package-pin
    dest: /etc/apt/preferences.d/pdns
- name: install package
  apt:
    name:
      - "pdns-server"
      - "pdns-backend-pgsql"
    state: present
    update_cache: yes

- import_tasks: passwords.yml
  delegate_to: "{{ groups['primary_nameserver'][0] }}"
  run_once: true

- name: stop powerdns
  systemd:
    name: pdns
    state: stopped

- name: clean default files
  file:
    name: "{{ item }}"
    state: absent
  loop:
    - /etc/powerdns/named.conf
    - /etc/powerdns/pdns.d/bind.conf

- name: write database settings
  template:
    src: pdns-psql.conf.j2
    dest: /etc/powerdns/pdns.d/pdns.local.gpgsql.conf

- import_tasks: install_leader.yml
  when: "'primary_nameserver' in group_names"

- import_tasks: install_follower.yml
  when: "'follower_nameservers' in group_names"

- name: check that database is configured
  postgresql_ping:
    db: pdns
    login_host: 127.0.0.1
    login_user: pdns
    login_password: "{{ pdns_db_pass }}"
  register: pdns_psql_db_up_final
  retries: 3
  delay: 5
  failed_when: not pdns_psql_db_up_final.is_available

- name: start powerdns
  systemd:
    name: pdns
    state: started
    enabled: yes

- service_facts:

- name: Halt if powerdns is offline
  fail:
    msg: PowerDNS failed to boot
  when: ansible_facts.services['pdns.service']['state'] != 'running'

- name: add zone to pdns
  command: "pdnsutil create-zone {{ cs_app_zone }} {{ pdns_name }}"
  register: pdns_create_zone_result
  when: "'primary_nameserver' in group_names"
  failed_when: pdns_create_zone_result.rc > 1 # 0 == created, 1 == already exists, 2+ == error of some kind.
