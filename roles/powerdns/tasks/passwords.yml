---
# 1. Check if password files exists, and if so:
# 2. load them with slurp, otherwise;
# 3. generate them here.
- name: credentials exist?
  stat:
    path: "{{ pdns_credentials_api_file }}"
  register: pdns_cred_api_file_exists  

# Generate and write credentials
- block:
    - set_fact:
        pdns_api_key: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
    - set_fact:
        pdns_web_key: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
    - set_fact:
        pdns_db_pass: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
    - name: create credentials dir
      file:
        path: "{{ pdns_credentials_dir }}"
        state: directory
    - name: write api key
      template:
        src: credentials/pdns-api.j2
        dest: "{{ pdns_credentials_api_file }}"
        mode: 0600
    - name: write web key
      template:
        src: credentials/pdns-db.j2
        dest: "{{ pdns_credentials_web_file }}"
        mode: 0600
    - name: write db key
      template:
        src: credentials/pdns-web.j2
        dest: "{{ pdns_credentials_db_file }}"
        mode: 0600
  when: not pdns_cred_api_file_exists.stat.exists

# Read existing credentials
- block:
    - name: slurp existing credentials
      slurp:
        src: "{{ pdns_credentials_api_file }}"
      register: pdns_cred_api_raw
    - slurp:
        src: "{{ pdns_credentials_web_file }}"
      register: pdns_cred_web_raw
    - slurp:
        src: "{{ pdns_credentials_db_file }}"
      register: pdns_cred_db_raw
    - set_fact:
        pdns_api_key: "{{ pdns_cred_api_raw.content | b64decode }}"
    - set_fact:
        pdns_web_key: "{{ pdns_cred_web_raw.content | b64decode }}"
    - set_fact:
        pdns_db_pass: "{{ pdns_cred_db_raw.content | b64decode }}"
  when: pdns_cred_api_file_exists.stat.exists