---
- name: stop etcd
  systemd:
    name: etcd
    state: stopped
    
- name: remove initial local etcd db
  file:
    path: "{{ etcd_member_dir }}"
    state: absent

- name: install config
  template:
    src: etcd.conf
    dest: "{{ etcd_conf }}"

- name: Check if certs exist
  stat:
    path: "{{ etcd_cert_file }}"
  register: cert_configured

- include_tasks: vault-certs.yml  
  when: cert_configured.stat.exists == False

- block:
    - name: determine if node already exists in cluster
      shell: "ETCDCTL_ENDPOINT=\"https://{{ etcd_leader_ip }}:2379\" {{ etcd_command_base }} member list | grep {{ etcd_listen_ip }} | wc -l"
      register: existing_member
      vars:
        ansible_ssh_pipelining: no
      delegate_to: "{{ groups['nodes'][0] }}"
    - name: Register Node with etcd leader
      shell: "ETCDCTL_ENDPOINTS=\"https://{{ etcd_leader_ip }}:2379\" {{ etcd_command_base }} member add {{ ansible_hostname }} https://{{ etcd_listen_ip }}:2380"
      register: add_member_output
      vars:
        ansible_ssh_pipelining: no
      delegate_to: "{{ groups['nodes'][0] }}"
      when: "existing_member.stdout == '0'" 
    - name: register updated cluster list
      set_fact:
        etcd_conf_append: "{{ item }}"
      when: item.split('=')[0] == 'ETCD_INITIAL_CLUSTER'
      with_items: "{{ add_member_output.stdout_lines }}"
    - name: "Update etcd.conf"
      lineinfile:
        dest: "{{ etcd_conf }}"
        line: "{{ etcd_conf_append }}"
        insertafter: EOF
  when: not is_etcd_leader

- name: start & enable etcd
  systemd:
    name: etcd
    state: started
    enabled: yes
    daemon_reload: yes

- block:
    - name: verify node was successfully added
      shell: "ETCDCTL_ENDPOINTS=\"https://{{ etcd_leader_ip }}:2379\" {{ etcd_command_base }} member list | grep {{ ansible_hostname }} | wc -l"
      register: etcd_node_present
      vars:
        ansible_ssh_pipelining: no
      delegate_to: "{{ groups['nodes'][0] }}"
    - name: "Halt provisioning if etcd member failed to be added."
      fail:
        msg: "Failed to bring {{ ansible_hostname }} online"
      when: "etcd_node_present.stdout == '0'" 
  when: not is_etcd_leader
